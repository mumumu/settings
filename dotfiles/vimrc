"
"  mumumu's ~/.vimrc setting
"
"  How to setup(in Ubuntu 14.04):
"
"  $ sudo apt-get install vim-nox git build-essential
"  $ git clone https://github.com/Shougo/neobundle.vim.git ~/.vim/bundle/neobundle.vim
"  :NeoBundleInstall
"  :NeoBundleInstall!
"

"
"  for neobundle setting
"

" Note: Skip initialization for vim-tiny or vim-small.
if 0 | endif

if &compatible
  set nocompatible               " Be iMproved
endif

" Required:
set runtimepath+=~/.vim/bundle/neobundle.vim/

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" My Bundles here:
" Refer to |:NeoBundle-examples|.
" Note: You don't set neobundle setting in .gvimrc!

call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

call neobundle#begin(expand('~/.vim/bundle/'))
NeoBundle 'Shougo/neobundle.vim'
NeoBundle 'nvie/vim-flake8'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'vim-scripts/ruby-matchit'
NeoBundle 'puppetlabs/puppet-syntax-vim'
NeoBundle 'fuenor/im_control.vim'
NeoBundle 'Shougo/neosnippet'
NeoBundle 'Shougo/neosnippet-snippets'
NeoBundle 'udalov/kotlin-vim'
call neobundle#end()

"
" fcitx
" 「日本語入力固定モード」の動作設定
"
let IM_CtrlMode = 6
" 「日本語入力固定モード」切替キー
inoremap <silent> <C-j> <C-r>=IMState('FixMode')<CR>

let g:neosnippet#snippets_directory='~/settings/vim_snippets'

" SuperTab like snippets behavior.
imap  <expr><TAB>
    \ pumvisible() ? "\<C-n>" :
    \ neosnippet#expandable_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

if has('conceal')
  set conceallevel=2 concealcursor=i
endif

" Syntax
syntax on
set background=dark
hi Comment ctermfg=LightCyan

" commands
set fileencoding=utf-8
set fileformat=unix
set tabstop=4
set shiftwidth=4
set textwidth=0
set tw=0
set hidden
set shell=/bin/bash\ -l\ -O\ expand_aliases
set autoindent
set expandtab
set splitright
set nohlsearch
set number
set clipboard=unnamedplus

"  command aliases
:command Nn set nonumber
:command NN set number
:command M !make
:command Mt !make && make test
:command T !make test
nnoremap <silent> <C-j> <ESC>:bnext<CR>
nnoremap <silent> <C-b> <ESC>:bnext<CR>
nnoremap <silent> <C-n> <ESC>:bnext<CR>
inoremap <silent> jj <ESC>
if has('terminal')
  :command Te terminal ++close ++rows=15
endif

"
"  for Python
"
"  http://www.vim.org/scripts/script.php?script_id=1542
"  https://github.com/nvie/vim-flake8
let _ = system("which flake8")
if !v:shell_error
    filetype plugin on
    autocmd BufWrite *.py call Flake8()
endif

"
"  no backup
"
set noswapfile
set nobackup

"
"  status line
"  http://www.ksknet.net/vi/statusline.html
"
set laststatus=2
set statusline=%<%F\ %m%r%h%w
set statusline+=%{'['.(&fenc!=''?&fenc:&enc).']['.&fileformat.']['.&filetype.']'}
set statusline+=%{fugitive#statusline()}
set statusline+=%=%l/%L,%c%V%8P

"
"  command alias for ranger
"
let g:ranger_cwd = getcwd()

function! RangeChooser()
    let temp = tempname()
    let ranger_cwd_files = system("ls -lart | grep types.py")
    if strlen(ranger_cwd_files) > 0
        g:ranger_cwd = system("dirname `dirname " . g:ranger_cwd . '`')   
    endif
    " The option "--choosefiles" was added in ranger 1.5.1. Use the next line
    " with ranger 1.4.2 through 1.5.0 instead.
    "exec 'silent !ranger --choosefile=' . shellescape(temp)
    exec 'silent !ranger --choosefiles=' . shellescape(temp) . ' ' . g:ranger_cwd
    if !filereadable(temp)
        " Nothing to read.
        return
    endif
    let names = readfile(temp)
    echo names
    if empty(names)
        " Nothing to open.
        return
    endif
    " Edit the first item.
    exec 'vsplit ' . fnameescape(names[0])
    " Add any remaning items to the arg list/buffer list.
    for name in names[1:]
        exec 'argadd ' . fnameescape(name)
    endfor
    let g:ranger_cwd = fnamemodify(expand(names[0]), ":h")
    redraw!
endfunction
command! -bar RangerChooser call RangeChooser()
nnoremap <leader>r :<C-U>RangerChooser<CR>
nnoremap <C-a> ggVG
