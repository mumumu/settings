"
"  mumumu's ~/.vimrc setting
"
"  How to setup(in Ubuntu 14.04):
"
"  $ sudo apt-get install vim-nox git build-essential
"  $ git clone https://github.com/Shougo/neobundle.vim.git ~/.vim/neobundle.vim.git "
"  :NeoBundleInstall
"  :NeoBundleInstall!
"

syntax on

set fileencoding=utf-8
set fileformat=unix
set expandtab
set shiftwidth=4
set tabstop=4
set shiftwidth=4
set hidden
set shell=/bin/bash\ -l\ -O\ expand_aliases
set autoindent
set paste
set splitright
set hlsearch

"
"  for neobundle setting
"

set nocompatible
filetype off

if has('vim_starting')
  set runtimepath+=~/.vim/neobundle.vim.git
  call neobundle#rc(expand('~/.bundle'))
endif

NeoBundle 'Shougo/neobundle.vim.git'
NeoBundle 'nvie/vim-flake8'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'puppetlabs/puppet-syntax-vim'

filetype plugin on
filetype indent on

"
"  for Python
"
"  http://www.vim.org/scripts/script.php?script_id=1542
"  https://github.com/nvie/vim-flake8
let g:flake8_ignore="E501"
autocmd BufWrite *.py :call Flake8()

"
"  no backup
"
set noswapfile
set nobackup

"
"  status line
"  http://www.ksknet.net/vi/statusline.html
"
set laststatus=2
set statusline=%<%F\ %m%r%h%w
set statusline+=%{'['.(&fenc!=''?&fenc:&enc).']['.&fileformat.']['.&filetype.']'}
set statusline+=%{fugitive#statusline()}
set statusline+=%=%l/%L,%c%V%8P

"
"  tag jump
"  http://stackoverflow.com/questions/563616/vim-and-ctags-tips-and-tricks
"
set tags=~/work/tags
set splitright
map <C-\> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>

"
"  command alias for ranger
"
let g:ranger_cwd = getcwd()

function! RangeChooser()
    let temp = tempname()
    let ranger_cwd_files = system("ls -lart | grep types.py")
    if strlen(ranger_cwd_files) > 0
        g:ranger_cwd = system("dirname `dirname " . g:ranger_cwd . '`')   
    endif
    " The option "--choosefiles" was added in ranger 1.5.1. Use the next line
    " with ranger 1.4.2 through 1.5.0 instead.
    "exec 'silent !ranger --choosefile=' . shellescape(temp)
    exec 'silent !ranger --choosefiles=' . shellescape(temp) . ' ' . g:ranger_cwd
    if !filereadable(temp)
        " Nothing to read.
        return
    endif
    let names = readfile(temp)
    echo names
    if empty(names)
        " Nothing to open.
        return
    endif
    " Edit the first item.
    exec 'vsplit ' . fnameescape(names[0])
    " Add any remaning items to the arg list/buffer list.
    for name in names[1:]
        exec 'argadd ' . fnameescape(name)
    endfor
    let g:ranger_cwd = fnamemodify(expand(names[0]), ":h")
    redraw!
endfunction
command! -bar RangerChooser call RangeChooser()
nnoremap <leader>r :<C-U>RangerChooser<CR>
