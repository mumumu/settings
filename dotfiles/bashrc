# ~/.bashrc: executed by bash(1) for non-login shells.

# .bashrc for interactive terminal
[ -z "$PS1" ] && return

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=20000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

#
#  My Environment
#

if [ -f /usr/bin/git ]; then
    if [ -f /etc/bash_completion.d/git ];then
        . /etc/bash_completion.d/git
    fi 
    export GIT_PS1_SHOWDIRTYSTATE=true
    export PS1='\u@\h \t \[\033[1;36m\]\w \[\033[31m\]$(__git_ps1 "[%s]")\[\033[00m\] $ '
    [ -n "$RANGER_LEVEL" ] && export PS1="(ranger$RANGER_LEVEL) $PS1"
    export SVN_EDITOR=vim
    export VISUAL=vim
    export EDITOR="$VISUAL"

    alias di="git diff"
    alias st="git status"
    alias br="git branch"
    alias gw="git worktree"
    alias m="git checkout master && git pull"
    alias rr='cd `git rev-parse --show-toplevel`'
fi

if [ -f /usr/bin/svn ]; then
    export SVN_EDITOR=vim
    export VISUAL=vim
    export EDITOR="$VISUAL"

    alias sdi="svn diff | lv -c"
    alias sst="svn status"
fi

#
#  My aliases
#

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'

    alias grep='grep -E --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias pt='py.test -sv'
alias ..='cd -'
alias ma='make'
alias mc='make clean'
alias mt='make test'
alias aptu="sudo apt-get update && sudo apt-get -y upgrade"
alias sal="cd ~/Maildir && sa-learn --spam .spam/*"
if [ -f "$HOME/bin/vim" ]; then
  alias vi="$HOME/bin/vim"
else
  alias vi="/usr/bin/vim"
fi
alias w3m='w3m -M'
alias pt='py.test -sv'
alias make='make -j`grep -c ^processor /proc/cpuinfo 2>/dev/null`'
alias ..='cd -'

#
#  ranger
#  sudo apt-get install ranger
#
alias r='ranger'
if [ ! -d $HOME/.config/ranger ]; then
    /usr/bin/ranger --copy-config=all
fi

#
#  rbenv
#  git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
#
if [ -d $HOME/.rbenv ]; then
    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
fi

#
#  phpenv
#  $ git clone https://github.com/CHH/phpenv.git
#  $ cd phpenv/bin
#  $ ./phpenv-install.sh
#  $ git clone https://github.com/CHH/php-build.git ~/.phpenv/plugins/php-build
#
if [ -d $HOME/.phpenv ]; then
    export PATH="$HOME/.phpenv/bin:$PATH"
    eval "$(phpenv init -)"
fi

#
#  pyenv
#  git clone https://github.com/yyuu/pyenv.git ~/.pyenv
#  git clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv
#
if [ -d $HOME/.pyenv ]; then
    export PYENV_ROOT=$HOME/.pyenv
    export PATH=$PYENV_ROOT/bin:$PATH
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

# PATH
export PATH=$HOME/bin:$PATH

#   keyrepeat
xset r rate 195 120

#   keychain
#
#   sudo apt-get install keychain
#
USE_KEYCHAIN=0
if [ -f $HOME/.ssh/id_dsa ];then
    keychain id_dsa
    USE_KEYCHAIN=1
fi
if [ -f $HOME/.ssh/id_rsa ];then
    keychain id_rsa
    USE_KEYCHAIN=1
fi
if [ $USE_KEYCHAIN -eq 1 ];then
    . ~/.keychain/$HOSTNAME-sh
fi

if [ -f $HOME/.bashrc_custom ];then
    . $HOME/.bashrc_custom
fi
